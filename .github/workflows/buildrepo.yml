name: Build aports

on:
  push:
    branches: [ "main" ]
  schedule:
    # Every day at 3am
    - cron: "0 3 * * *"

concurrency: buildrepo

jobs:
  buildrepo:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
      options: --pull always
    environment: release
    env:
      ABUILD_USER: builder
      USE_CCACHE: 1

    steps:
      - name: Get Alpine release version
        run: |
          ALPINE_RELEASE="$(cat /etc/alpine-release)"
          echo ALPINE_RELEASE_MINOR="${ALPINE_RELEASE}" >> $GITHUB_ENV
          echo ALPINE_RELEASE_MAJOR="${ALPINE_RELEASE%.*}" >> $GITHUB_ENV

      - name: Install build dependencies
        run: apk add --update alpine-sdk ccache doas rclone tar

      - name: Configure git user
        uses: tidylabs/action-git-config-user@v1

      - name: Checkout alpinelinux/aports
        uses: actions/checkout@v3
        with:
          repository: alpinelinux/aports
          ref: v${{ env.ALPINE_RELEASE_MINOR }}
          path: aports

      - name: Checkout tidylabs/aports
        uses: actions/checkout@v3
        with:
          path: tidylabs-aports

      - name: Create user for abuild
        run: |
          adduser -h "$GITHUB_WORKSPACE" -D $ABUILD_USER
          adduser ${ABUILD_USER} abuild

          adduser ${ABUILD_USER} wheel
          echo "permit nopass :wheel" >> "/etc/doas.d/doas.conf"

      - name: Configure rclone
        run: |
          RCLONE_CONFIG="$HOME/.config/rclone/rclone.conf"
          mkdir -p "${RCLONE_CONFIG%/*}"
          echo "${{ secrets.RCLONE_CONFIG }}" > "${RCLONE_CONFIG}"

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apk
            /var/cache/distfiles
            .cache
            .ccache
          key: aports-${{ env.ALPINE_RELEASE_MINOR }}-${{ github.run_id }}
          restore-keys: |
            aports-${{ env.ALPINE_RELEASE_MINOR }}
            aports-${{ env.ALPINE_RELEASE_MAJOR }}

      - name: Download packages
        run: |
          rclone mkdir -v remote:v${ALPINE_RELEASE_MAJOR}/
          rclone sync -v remote:v${ALPINE_RELEASE_MAJOR}/ packages/

      - name: Setup signing keys
        run: |
          PACKAGER_PRIVKEY="${GITHUB_WORKSPACE}/.abuild/opensource@tidylabs.app-e0bb7fa4.rsa"
          mkdir -p "${PACKAGER_PRIVKEY%/*}"
          echo "${{ secrets.PACKAGER_PRIVKEY }}" > "${PACKAGER_PRIVKEY}"
          echo "PACKAGER_PRIVKEY=${PACKAGER_PRIVKEY}" >> "${GITHUB_WORKSPACE}/.abuild/abuild.conf"

          PACKAGER_PUBKEY="/etc/apk/keys/opensource@tidylabs.app-e0bb7fa4.rsa.pub"
          mkdir -p "${PACKAGER_PUBKEY%/*}"
          echo "${{ secrets.PACKAGER_PUBKEY }}" > "${PACKAGER_PUBKEY}"
          echo "PACKAGER_PUBKEY=${PACKAGER_PUBKEY}" >> "${GITHUB_WORKSPACE}/.abuild/abuild.conf"

      - name: Fix filesystem permissions
        run: |
          chown -R ${ABUILD_USER}:${ABUILD_USER} "${GITHUB_WORKSPACE}"

      - name: Configure ccache
        run: |
          su ${ABUILD_USER} -c 'ccache -o base_dir="${HOME}" -o hash_dir=false'

      - name: Build aarch64 cross compiler
        run: |
          su ${ABUILD_USER} -c 'tidylabs-aports/scripts/bootstrap-cc.sh aarch64'

      - name: Build 'community' repo (x86_64)
        run: |
          su ${ABUILD_USER} -c 'APKBUILD="${GITHUB_WORKSPACE}/tidylabs-aports/community/python2/APKBUILD" abuild -F -r -k'
          su ${ABUILD_USER} -c 'APKBUILD="${GITHUB_WORKSPACE}/tidylabs-aports/community/mongodb-org-server3/APKBUILD" abuild -F -r -k'

      - name: Build 'community' repo (aarch64)
        run: |
          su ${ABUILD_USER} -c 'APKBUILD="${GITHUB_WORKSPACE}/tidylabs-aports/community/python2/APKBUILD" abuild -F -r -k'
          su ${ABUILD_USER} -c 'APKBUILD="${GITHUB_WORKSPACE}/tidylabs-aports/community/mongodb-org-server3/APKBUILD" abuild -F -r -k'
        env:
          CHOST: aarch64
          EXTRADEPENDS_TARGET: libgcc libstdc++ musl-dev

      - name: Upload packages
        run: rclone sync -v packages/ remote:v${ALPINE_RELEASE_MAJOR}/
